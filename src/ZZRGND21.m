ZZRGND21 ;;CBR/AU - UTILITY TAGS ;08/15/12
 ;;1.0;RGI Dependency Tool;**260004**;08/15/2012
 ;
 Q  ; Call tags
 ;
WTAGAPI(GL,PKG,RTN,TAG)
 ;K @GL@(20),@GL@(21)
 D NDXTAG^ZZRGND14(GL,PKG,RTN,TAG)
 D WRTNAPI^ZZRGND13(GL,PKG,RTN,TAG)
 Q
 ;
WTAGAPI2()
 N GL
 S GL="^ZZRG"
 K @GL@(20),@GL@(21)
 D WTAGAPI("^ZZRG","ABSV","ABSV88B","ADD")
 D WTAGAPI("^ZZRG","ABSV","ABSV88B","DEL")
 D WTAGAPI("^ZZRG","DI","DIEFU","VENTRY")
 Q
 ; 
FINDLOC(LOCAL) ;
 N IRTN,ITAG,ISTART,RESULT,T
 F I=^AFSTEST:-1:1 D
 . S ALL=^AFSTEST(I)
 . S ITAG=$P(ALL,"^",1)
 . S IRTN=$P(ALL,"^",2)
 . S ISTART=+$P(ALL,"^",3)
 . K RESULT
 . M RESULT=^AFSTEST20(IRTN,ITAG,ISTART,"RESULT") 
 . F T="I","O" D
 . . Q:'$D(RESULT(T,LOCAL))
 . . W T," >> ",ITAG_"^"_IRTN
 . . W:ISTART>0 " ("_ISTART_")"
 . . W !
 Q
 ;
FINDENTRY(TAG,RTN,START,TTAG,TRTN,PATH) ;
 N ITAG,IRTN,ISTART
 Q:$D(PATH("KEY",TAG_"^"_RTN))
 S PATH=$G(PATH)+1
 S PATH(PATH)=TAG_"^"_RTN
 S PATH("KEY",TAG_"^"_RTN)=""
 I TRTN=RTN,TTAG=TAG D  Q
 . K ^AFSRESULT
 . M ^AFSRESULT=PATH
 S IRTN=""
 F  S IRTN=$O(^AFSTEST20(RTN,TAG,START,"FI",IRTN))  Q:IRTN=""  D
 . S ITAG=""
 . F  S ITAG=$O(^AFSTEST20(RTN,TAG,START,"FI",IRTN,ITAG))  Q:ITAG=""  D
 . . S ISTART=""
 . . F  S ISTART=$O(^AFSTEST20(RTN,TAG,START,"FI",IRTN,ITAG,ISTART))  Q:ISTART=""  D
 . . . N THISPATH
 . . . M THISPATH=PATH
 . . . D FINDENTRY(ITAG,IRTN,ISTART,TTAG,TRTN,.THISPATH)
 Q 
 ;
SINGLER(GLB) ; parses codebase & extracts relevant info
 N CNT,RTN,INP,NRO,DA,INDDA 
 S:$G(GLB)="" GLB="^AFSX"
 K @GLB
 D NEWINP^ZZRGND14(.INP)
 S INP(10)=9.4,INP(1)=1,DA=-1,INDDA=DA
 S CNT=0,RTN=""
 K ^UTILITY($J)
 I '$D(^UTILITY($J)),$D(^%ZOSF("RSEL")) X ^("RSEL")
 S NRO=0,X=0 F I=0:0 S X=$O(^UTILITY($J,X)) Q:X=""  S NRO=NRO+1
 D MAIN^ZZRGNDX(1)
 M @GLB=^UTILITY($J)
 K ^UTILITY($J)
 Q
 ;
 ; Merges assumed variables
MRGASSUM(GL,FANOUTS) ;
 N ITAG,IRTN,ISTART,KEY
 S:$G(GL)="" GL="^ZZRG"
 S KEY=$P(FANOUTS(0),"^",1,3)
 N LOC
 F I=FANOUTS:-1:0 D
 . S KEY=$P(FANOUTS(I),"^",1,3)
 . S LOC=""
 . F  S LOC=$O(@GL@(20,KEY,"RESULT","A",LOC)) Q:LOC=""  D MRGLOC(GL,KEY,LOC)
 Q
 ;
MRGLOC(GL,IKEY,LOC) 
 N TKEY,NINDEX
 K @GL@(20,IKEY,"RESULT","A",LOC)
 S @GL@(20,IKEY,"RESULT","D",LOC)=""
 S TKEY=""
 F  S TKEY=$O(@GL@(21,IKEY,"FI",TKEY)) Q:TKEY=""  D
 . Q:$D(@GL@(20,TKEY,"RESULT","D",LOC))
 . S NINDEX=$G(@GL@(20,TKEY,"RESULT","N",LOC))
 . I NINDEX]"" Q:+NINDEX<@GL@(20,TKEY,"FO",IKEY)
 . D MRGLOC(GL,TKEY,LOC)
 Q
 ;
